/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

goog.exportSymbol('proto.ExternalMerchant.ExtMerchantTransRequestMessage', null, global);
goog.exportSymbol('proto.ExternalMerchant.ExternalMerchantEmptyMessage', null, global);
goog.exportSymbol('proto.ExternalMerchant.SuccessExternalMerchantMessage', null, global);
goog.exportSymbol('proto.ExternalMerchant.ValidateExtMerchantApiKeyRequestMessage', null, global);

/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ExternalMerchant.ExternalMerchantEmptyMessage = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ExternalMerchant.ExternalMerchantEmptyMessage, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.ExternalMerchant.ExternalMerchantEmptyMessage.displayName = 'proto.ExternalMerchant.ExternalMerchantEmptyMessage';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ExternalMerchant.ExternalMerchantEmptyMessage.prototype.toObject = function(opt_includeInstance) {
  return proto.ExternalMerchant.ExternalMerchantEmptyMessage.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ExternalMerchant.ExternalMerchantEmptyMessage} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ExternalMerchant.ExternalMerchantEmptyMessage.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ExternalMerchant.ExternalMerchantEmptyMessage}
 */
proto.ExternalMerchant.ExternalMerchantEmptyMessage.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ExternalMerchant.ExternalMerchantEmptyMessage;
  return proto.ExternalMerchant.ExternalMerchantEmptyMessage.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ExternalMerchant.ExternalMerchantEmptyMessage} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ExternalMerchant.ExternalMerchantEmptyMessage}
 */
proto.ExternalMerchant.ExternalMerchantEmptyMessage.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ExternalMerchant.ExternalMerchantEmptyMessage.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ExternalMerchant.ExternalMerchantEmptyMessage.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ExternalMerchant.ExternalMerchantEmptyMessage} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ExternalMerchant.ExternalMerchantEmptyMessage.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ExternalMerchant.SuccessExternalMerchantMessage = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ExternalMerchant.SuccessExternalMerchantMessage, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.ExternalMerchant.SuccessExternalMerchantMessage.displayName = 'proto.ExternalMerchant.SuccessExternalMerchantMessage';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ExternalMerchant.SuccessExternalMerchantMessage.prototype.toObject = function(opt_includeInstance) {
  return proto.ExternalMerchant.SuccessExternalMerchantMessage.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ExternalMerchant.SuccessExternalMerchantMessage} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ExternalMerchant.SuccessExternalMerchantMessage.toObject = function(includeInstance, msg) {
  var f, obj = {
    issuccess: jspb.Message.getFieldWithDefault(msg, 1, false),
    messagesuccessfulorfailed: jspb.Message.getFieldWithDefault(msg, 2, ""),
    message: jspb.Message.getFieldWithDefault(msg, 3, ""),
    registrationerrorcode: jspb.Message.getFieldWithDefault(msg, 4, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ExternalMerchant.SuccessExternalMerchantMessage}
 */
proto.ExternalMerchant.SuccessExternalMerchantMessage.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ExternalMerchant.SuccessExternalMerchantMessage;
  return proto.ExternalMerchant.SuccessExternalMerchantMessage.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ExternalMerchant.SuccessExternalMerchantMessage} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ExternalMerchant.SuccessExternalMerchantMessage}
 */
proto.ExternalMerchant.SuccessExternalMerchantMessage.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIssuccess(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setMessagesuccessfulorfailed(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setMessage(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setRegistrationerrorcode(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ExternalMerchant.SuccessExternalMerchantMessage.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ExternalMerchant.SuccessExternalMerchantMessage.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ExternalMerchant.SuccessExternalMerchantMessage} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ExternalMerchant.SuccessExternalMerchantMessage.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getIssuccess();
  if (f) {
    writer.writeBool(
      1,
      f
    );
  }
  f = message.getMessagesuccessfulorfailed();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getMessage();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getRegistrationerrorcode();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
};


/**
 * optional bool isSuccess = 1;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.ExternalMerchant.SuccessExternalMerchantMessage.prototype.getIssuccess = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 1, false));
};


/** @param {boolean} value */
proto.ExternalMerchant.SuccessExternalMerchantMessage.prototype.setIssuccess = function(value) {
  jspb.Message.setProto3BooleanField(this, 1, value);
};


/**
 * optional string messageSuccessfulOrFailed = 2;
 * @return {string}
 */
proto.ExternalMerchant.SuccessExternalMerchantMessage.prototype.getMessagesuccessfulorfailed = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.ExternalMerchant.SuccessExternalMerchantMessage.prototype.setMessagesuccessfulorfailed = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string message = 3;
 * @return {string}
 */
proto.ExternalMerchant.SuccessExternalMerchantMessage.prototype.getMessage = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.ExternalMerchant.SuccessExternalMerchantMessage.prototype.setMessage = function(value) {
  jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string registrationErrorCode = 4;
 * @return {string}
 */
proto.ExternalMerchant.SuccessExternalMerchantMessage.prototype.getRegistrationerrorcode = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/** @param {string} value */
proto.ExternalMerchant.SuccessExternalMerchantMessage.prototype.setRegistrationerrorcode = function(value) {
  jspb.Message.setProto3StringField(this, 4, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ExternalMerchant.ValidateExtMerchantApiKeyRequestMessage = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ExternalMerchant.ValidateExtMerchantApiKeyRequestMessage, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.ExternalMerchant.ValidateExtMerchantApiKeyRequestMessage.displayName = 'proto.ExternalMerchant.ValidateExtMerchantApiKeyRequestMessage';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ExternalMerchant.ValidateExtMerchantApiKeyRequestMessage.prototype.toObject = function(opt_includeInstance) {
  return proto.ExternalMerchant.ValidateExtMerchantApiKeyRequestMessage.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ExternalMerchant.ValidateExtMerchantApiKeyRequestMessage} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ExternalMerchant.ValidateExtMerchantApiKeyRequestMessage.toObject = function(includeInstance, msg) {
  var f, obj = {
    merchantguid: jspb.Message.getFieldWithDefault(msg, 1, ""),
    merchantapikey: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ExternalMerchant.ValidateExtMerchantApiKeyRequestMessage}
 */
proto.ExternalMerchant.ValidateExtMerchantApiKeyRequestMessage.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ExternalMerchant.ValidateExtMerchantApiKeyRequestMessage;
  return proto.ExternalMerchant.ValidateExtMerchantApiKeyRequestMessage.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ExternalMerchant.ValidateExtMerchantApiKeyRequestMessage} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ExternalMerchant.ValidateExtMerchantApiKeyRequestMessage}
 */
proto.ExternalMerchant.ValidateExtMerchantApiKeyRequestMessage.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setMerchantguid(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setMerchantapikey(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ExternalMerchant.ValidateExtMerchantApiKeyRequestMessage.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ExternalMerchant.ValidateExtMerchantApiKeyRequestMessage.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ExternalMerchant.ValidateExtMerchantApiKeyRequestMessage} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ExternalMerchant.ValidateExtMerchantApiKeyRequestMessage.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMerchantguid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getMerchantapikey();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string merchantGuid = 1;
 * @return {string}
 */
proto.ExternalMerchant.ValidateExtMerchantApiKeyRequestMessage.prototype.getMerchantguid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.ExternalMerchant.ValidateExtMerchantApiKeyRequestMessage.prototype.setMerchantguid = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string merchantApiKey = 2;
 * @return {string}
 */
proto.ExternalMerchant.ValidateExtMerchantApiKeyRequestMessage.prototype.getMerchantapikey = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.ExternalMerchant.ValidateExtMerchantApiKeyRequestMessage.prototype.setMerchantapikey = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ExternalMerchant.ExtMerchantTransRequestMessage = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ExternalMerchant.ExtMerchantTransRequestMessage, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.ExternalMerchant.ExtMerchantTransRequestMessage.displayName = 'proto.ExternalMerchant.ExtMerchantTransRequestMessage';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ExternalMerchant.ExtMerchantTransRequestMessage.prototype.toObject = function(opt_includeInstance) {
  return proto.ExternalMerchant.ExtMerchantTransRequestMessage.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ExternalMerchant.ExtMerchantTransRequestMessage} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ExternalMerchant.ExtMerchantTransRequestMessage.toObject = function(includeInstance, msg) {
  var f, obj = {
    destinationpaypartnerserviceid: jspb.Message.getFieldWithDefault(msg, 1, ""),
    destinationaccountno: jspb.Message.getFieldWithDefault(msg, 2, ""),
    destinationaccountname: jspb.Message.getFieldWithDefault(msg, 3, ""),
    transamount: +jspb.Message.getFieldWithDefault(msg, 4, 0.0),
    sourcepaypartnerserviceid: jspb.Message.getFieldWithDefault(msg, 5, ""),
    sourceaccountno: jspb.Message.getFieldWithDefault(msg, 6, ""),
    sourceaccountname: jspb.Message.getFieldWithDefault(msg, 7, ""),
    mobileorweborussd: jspb.Message.getFieldWithDefault(msg, 8, ""),
    transreference: jspb.Message.getFieldWithDefault(msg, 9, ""),
    merchanttransrefno: jspb.Message.getFieldWithDefault(msg, 10, ""),
    merchantuniqueidvalue: jspb.Message.getFieldWithDefault(msg, 11, ""),
    merchantcolumnonevalue: jspb.Message.getFieldWithDefault(msg, 12, ""),
    merchantcolumntwovalue: jspb.Message.getFieldWithDefault(msg, 13, ""),
    merchantcolumnthreevalue: jspb.Message.getFieldWithDefault(msg, 14, ""),
    iscolumnonerequiredyesnona: jspb.Message.getFieldWithDefault(msg, 15, ""),
    iscolumntworequiredyesnona: jspb.Message.getFieldWithDefault(msg, 16, ""),
    iscolumnthreerequiredyesnona: jspb.Message.getFieldWithDefault(msg, 17, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ExternalMerchant.ExtMerchantTransRequestMessage}
 */
proto.ExternalMerchant.ExtMerchantTransRequestMessage.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ExternalMerchant.ExtMerchantTransRequestMessage;
  return proto.ExternalMerchant.ExtMerchantTransRequestMessage.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ExternalMerchant.ExtMerchantTransRequestMessage} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ExternalMerchant.ExtMerchantTransRequestMessage}
 */
proto.ExternalMerchant.ExtMerchantTransRequestMessage.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setDestinationpaypartnerserviceid(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setDestinationaccountno(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setDestinationaccountname(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setTransamount(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setSourcepaypartnerserviceid(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setSourceaccountno(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setSourceaccountname(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setMobileorweborussd(value);
      break;
    case 9:
      var value = /** @type {string} */ (reader.readString());
      msg.setTransreference(value);
      break;
    case 10:
      var value = /** @type {string} */ (reader.readString());
      msg.setMerchanttransrefno(value);
      break;
    case 11:
      var value = /** @type {string} */ (reader.readString());
      msg.setMerchantuniqueidvalue(value);
      break;
    case 12:
      var value = /** @type {string} */ (reader.readString());
      msg.setMerchantcolumnonevalue(value);
      break;
    case 13:
      var value = /** @type {string} */ (reader.readString());
      msg.setMerchantcolumntwovalue(value);
      break;
    case 14:
      var value = /** @type {string} */ (reader.readString());
      msg.setMerchantcolumnthreevalue(value);
      break;
    case 15:
      var value = /** @type {string} */ (reader.readString());
      msg.setIscolumnonerequiredyesnona(value);
      break;
    case 16:
      var value = /** @type {string} */ (reader.readString());
      msg.setIscolumntworequiredyesnona(value);
      break;
    case 17:
      var value = /** @type {string} */ (reader.readString());
      msg.setIscolumnthreerequiredyesnona(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ExternalMerchant.ExtMerchantTransRequestMessage.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ExternalMerchant.ExtMerchantTransRequestMessage.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ExternalMerchant.ExtMerchantTransRequestMessage} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ExternalMerchant.ExtMerchantTransRequestMessage.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDestinationpaypartnerserviceid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getDestinationaccountno();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getDestinationaccountname();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getTransamount();
  if (f !== 0.0) {
    writer.writeDouble(
      4,
      f
    );
  }
  f = message.getSourcepaypartnerserviceid();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getSourceaccountno();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getSourceaccountname();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getMobileorweborussd();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
  f = message.getTransreference();
  if (f.length > 0) {
    writer.writeString(
      9,
      f
    );
  }
  f = message.getMerchanttransrefno();
  if (f.length > 0) {
    writer.writeString(
      10,
      f
    );
  }
  f = message.getMerchantuniqueidvalue();
  if (f.length > 0) {
    writer.writeString(
      11,
      f
    );
  }
  f = message.getMerchantcolumnonevalue();
  if (f.length > 0) {
    writer.writeString(
      12,
      f
    );
  }
  f = message.getMerchantcolumntwovalue();
  if (f.length > 0) {
    writer.writeString(
      13,
      f
    );
  }
  f = message.getMerchantcolumnthreevalue();
  if (f.length > 0) {
    writer.writeString(
      14,
      f
    );
  }
  f = message.getIscolumnonerequiredyesnona();
  if (f.length > 0) {
    writer.writeString(
      15,
      f
    );
  }
  f = message.getIscolumntworequiredyesnona();
  if (f.length > 0) {
    writer.writeString(
      16,
      f
    );
  }
  f = message.getIscolumnthreerequiredyesnona();
  if (f.length > 0) {
    writer.writeString(
      17,
      f
    );
  }
};


/**
 * optional string destinationPayPartnerServiceId = 1;
 * @return {string}
 */
proto.ExternalMerchant.ExtMerchantTransRequestMessage.prototype.getDestinationpaypartnerserviceid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.ExternalMerchant.ExtMerchantTransRequestMessage.prototype.setDestinationpaypartnerserviceid = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string destinationAccountNo = 2;
 * @return {string}
 */
proto.ExternalMerchant.ExtMerchantTransRequestMessage.prototype.getDestinationaccountno = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.ExternalMerchant.ExtMerchantTransRequestMessage.prototype.setDestinationaccountno = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string destinationAccountName = 3;
 * @return {string}
 */
proto.ExternalMerchant.ExtMerchantTransRequestMessage.prototype.getDestinationaccountname = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.ExternalMerchant.ExtMerchantTransRequestMessage.prototype.setDestinationaccountname = function(value) {
  jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional double transAmount = 4;
 * @return {number}
 */
proto.ExternalMerchant.ExtMerchantTransRequestMessage.prototype.getTransamount = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 4, 0.0));
};


/** @param {number} value */
proto.ExternalMerchant.ExtMerchantTransRequestMessage.prototype.setTransamount = function(value) {
  jspb.Message.setProto3FloatField(this, 4, value);
};


/**
 * optional string sourcePayPartnerServiceId = 5;
 * @return {string}
 */
proto.ExternalMerchant.ExtMerchantTransRequestMessage.prototype.getSourcepaypartnerserviceid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/** @param {string} value */
proto.ExternalMerchant.ExtMerchantTransRequestMessage.prototype.setSourcepaypartnerserviceid = function(value) {
  jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string sourceAccountNo = 6;
 * @return {string}
 */
proto.ExternalMerchant.ExtMerchantTransRequestMessage.prototype.getSourceaccountno = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/** @param {string} value */
proto.ExternalMerchant.ExtMerchantTransRequestMessage.prototype.setSourceaccountno = function(value) {
  jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional string sourceAccountName = 7;
 * @return {string}
 */
proto.ExternalMerchant.ExtMerchantTransRequestMessage.prototype.getSourceaccountname = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/** @param {string} value */
proto.ExternalMerchant.ExtMerchantTransRequestMessage.prototype.setSourceaccountname = function(value) {
  jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * optional string mobileOrWebOrUSSD = 8;
 * @return {string}
 */
proto.ExternalMerchant.ExtMerchantTransRequestMessage.prototype.getMobileorweborussd = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/** @param {string} value */
proto.ExternalMerchant.ExtMerchantTransRequestMessage.prototype.setMobileorweborussd = function(value) {
  jspb.Message.setProto3StringField(this, 8, value);
};


/**
 * optional string transReference = 9;
 * @return {string}
 */
proto.ExternalMerchant.ExtMerchantTransRequestMessage.prototype.getTransreference = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, ""));
};


/** @param {string} value */
proto.ExternalMerchant.ExtMerchantTransRequestMessage.prototype.setTransreference = function(value) {
  jspb.Message.setProto3StringField(this, 9, value);
};


/**
 * optional string MerchantTransRefNo = 10;
 * @return {string}
 */
proto.ExternalMerchant.ExtMerchantTransRequestMessage.prototype.getMerchanttransrefno = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 10, ""));
};


/** @param {string} value */
proto.ExternalMerchant.ExtMerchantTransRequestMessage.prototype.setMerchanttransrefno = function(value) {
  jspb.Message.setProto3StringField(this, 10, value);
};


/**
 * optional string MerchantUniqueIdValue = 11;
 * @return {string}
 */
proto.ExternalMerchant.ExtMerchantTransRequestMessage.prototype.getMerchantuniqueidvalue = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 11, ""));
};


/** @param {string} value */
proto.ExternalMerchant.ExtMerchantTransRequestMessage.prototype.setMerchantuniqueidvalue = function(value) {
  jspb.Message.setProto3StringField(this, 11, value);
};


/**
 * optional string MerchantColumnOneValue = 12;
 * @return {string}
 */
proto.ExternalMerchant.ExtMerchantTransRequestMessage.prototype.getMerchantcolumnonevalue = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 12, ""));
};


/** @param {string} value */
proto.ExternalMerchant.ExtMerchantTransRequestMessage.prototype.setMerchantcolumnonevalue = function(value) {
  jspb.Message.setProto3StringField(this, 12, value);
};


/**
 * optional string MerchantColumnTwoValue = 13;
 * @return {string}
 */
proto.ExternalMerchant.ExtMerchantTransRequestMessage.prototype.getMerchantcolumntwovalue = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 13, ""));
};


/** @param {string} value */
proto.ExternalMerchant.ExtMerchantTransRequestMessage.prototype.setMerchantcolumntwovalue = function(value) {
  jspb.Message.setProto3StringField(this, 13, value);
};


/**
 * optional string MerchantColumnThreeValue = 14;
 * @return {string}
 */
proto.ExternalMerchant.ExtMerchantTransRequestMessage.prototype.getMerchantcolumnthreevalue = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 14, ""));
};


/** @param {string} value */
proto.ExternalMerchant.ExtMerchantTransRequestMessage.prototype.setMerchantcolumnthreevalue = function(value) {
  jspb.Message.setProto3StringField(this, 14, value);
};


/**
 * optional string IsColumnOneRequiredYesNoNa = 15;
 * @return {string}
 */
proto.ExternalMerchant.ExtMerchantTransRequestMessage.prototype.getIscolumnonerequiredyesnona = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 15, ""));
};


/** @param {string} value */
proto.ExternalMerchant.ExtMerchantTransRequestMessage.prototype.setIscolumnonerequiredyesnona = function(value) {
  jspb.Message.setProto3StringField(this, 15, value);
};


/**
 * optional string IsColumnTwoRequiredYesNoNa = 16;
 * @return {string}
 */
proto.ExternalMerchant.ExtMerchantTransRequestMessage.prototype.getIscolumntworequiredyesnona = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 16, ""));
};


/** @param {string} value */
proto.ExternalMerchant.ExtMerchantTransRequestMessage.prototype.setIscolumntworequiredyesnona = function(value) {
  jspb.Message.setProto3StringField(this, 16, value);
};


/**
 * optional string IsColumnThreeRequiredYesNoNa = 17;
 * @return {string}
 */
proto.ExternalMerchant.ExtMerchantTransRequestMessage.prototype.getIscolumnthreerequiredyesnona = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 17, ""));
};


/** @param {string} value */
proto.ExternalMerchant.ExtMerchantTransRequestMessage.prototype.setIscolumnthreerequiredyesnona = function(value) {
  jspb.Message.setProto3StringField(this, 17, value);
};


goog.object.extend(exports, proto.ExternalMerchant);
