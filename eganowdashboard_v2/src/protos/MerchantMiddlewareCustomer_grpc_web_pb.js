/**
 * @fileoverview gRPC-Web generated client stub for MerchantMiddlewareCustomer
 * @enhanceable
 * @public
 */

// Code generated by protoc-gen-grpc-web. DO NOT EDIT.
// versions:
// 	protoc-gen-grpc-web v1.4.2
// 	protoc              v4.23.3
// source: MerchantMiddlewareCustomer.proto


/* eslint-disable */
// @ts-nocheck



const grpc = {};
grpc.web = require('grpc-web');

const proto = {};
proto.MerchantMiddlewareCustomer = require('./MerchantMiddlewareCustomer_pb.js');

/**
 * @param {string} hostname
 * @param {?Object} credentials
 * @param {?grpc.web.ClientOptions} options
 * @constructor
 * @struct
 * @final
 */
proto.MerchantMiddlewareCustomer.MerchantMiddlewareCustomerSvcClient =
    function(hostname, credentials, options) {
  if (!options) options = {};
  options.format = 'text';

  /**
   * @private @const {!grpc.web.GrpcWebClientBase} The client
   */
  this.client_ = new grpc.web.GrpcWebClientBase(options);

  /**
   * @private @const {string} The hostname
   */
  this.hostname_ = hostname.replace(/\/+$/, '');

};


/**
 * @param {string} hostname
 * @param {?Object} credentials
 * @param {?grpc.web.ClientOptions} options
 * @constructor
 * @struct
 * @final
 */
proto.MerchantMiddlewareCustomer.MerchantMiddlewareCustomerSvcPromiseClient =
    function(hostname, credentials, options) {
  if (!options) options = {};
  options.format = 'text';

  /**
   * @private @const {!grpc.web.GrpcWebClientBase} The client
   */
  this.client_ = new grpc.web.GrpcWebClientBase(options);

  /**
   * @private @const {string} The hostname
   */
  this.hostname_ = hostname.replace(/\/+$/, '');

};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.MerchantMiddlewareCustomer.UsersByCIDRequestMessage,
 *   !proto.MerchantMiddlewareCustomer.UsersUssdByCIDListMessage>}
 */
const methodDescriptor_MerchantMiddlewareCustomerSvc_GetUsersByMerchantId = new grpc.web.MethodDescriptor(
  '/MerchantMiddlewareCustomer.MerchantMiddlewareCustomerSvc/GetUsersByMerchantId',
  grpc.web.MethodType.UNARY,
  proto.MerchantMiddlewareCustomer.UsersByCIDRequestMessage,
  proto.MerchantMiddlewareCustomer.UsersUssdByCIDListMessage,
  /**
   * @param {!proto.MerchantMiddlewareCustomer.UsersByCIDRequestMessage} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.MerchantMiddlewareCustomer.UsersUssdByCIDListMessage.deserializeBinary
);


/**
 * @param {!proto.MerchantMiddlewareCustomer.UsersByCIDRequestMessage} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.MerchantMiddlewareCustomer.UsersUssdByCIDListMessage)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.MerchantMiddlewareCustomer.UsersUssdByCIDListMessage>|undefined}
 *     The XHR Node Readable Stream
 */
proto.MerchantMiddlewareCustomer.MerchantMiddlewareCustomerSvcClient.prototype.getUsersByMerchantId =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/MerchantMiddlewareCustomer.MerchantMiddlewareCustomerSvc/GetUsersByMerchantId',
      request,
      metadata || {},
      methodDescriptor_MerchantMiddlewareCustomerSvc_GetUsersByMerchantId,
      callback);
};


/**
 * @param {!proto.MerchantMiddlewareCustomer.UsersByCIDRequestMessage} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.MerchantMiddlewareCustomer.UsersUssdByCIDListMessage>}
 *     Promise that resolves to the response
 */
proto.MerchantMiddlewareCustomer.MerchantMiddlewareCustomerSvcPromiseClient.prototype.getUsersByMerchantId =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/MerchantMiddlewareCustomer.MerchantMiddlewareCustomerSvc/GetUsersByMerchantId',
      request,
      metadata || {},
      methodDescriptor_MerchantMiddlewareCustomerSvc_GetUsersByMerchantId);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.MerchantMiddlewareCustomer.MerchantCustomerIdRequestMessage,
 *   !proto.MerchantMiddlewareCustomer.SuccessMessageMerchantMiddleware>}
 */
const methodDescriptor_MerchantMiddlewareCustomerSvc_AuthorizeRegistredCustomer = new grpc.web.MethodDescriptor(
  '/MerchantMiddlewareCustomer.MerchantMiddlewareCustomerSvc/AuthorizeRegistredCustomer',
  grpc.web.MethodType.UNARY,
  proto.MerchantMiddlewareCustomer.MerchantCustomerIdRequestMessage,
  proto.MerchantMiddlewareCustomer.SuccessMessageMerchantMiddleware,
  /**
   * @param {!proto.MerchantMiddlewareCustomer.MerchantCustomerIdRequestMessage} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.MerchantMiddlewareCustomer.SuccessMessageMerchantMiddleware.deserializeBinary
);


/**
 * @param {!proto.MerchantMiddlewareCustomer.MerchantCustomerIdRequestMessage} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.MerchantMiddlewareCustomer.SuccessMessageMerchantMiddleware)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.MerchantMiddlewareCustomer.SuccessMessageMerchantMiddleware>|undefined}
 *     The XHR Node Readable Stream
 */
proto.MerchantMiddlewareCustomer.MerchantMiddlewareCustomerSvcClient.prototype.authorizeRegistredCustomer =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/MerchantMiddlewareCustomer.MerchantMiddlewareCustomerSvc/AuthorizeRegistredCustomer',
      request,
      metadata || {},
      methodDescriptor_MerchantMiddlewareCustomerSvc_AuthorizeRegistredCustomer,
      callback);
};


/**
 * @param {!proto.MerchantMiddlewareCustomer.MerchantCustomerIdRequestMessage} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.MerchantMiddlewareCustomer.SuccessMessageMerchantMiddleware>}
 *     Promise that resolves to the response
 */
proto.MerchantMiddlewareCustomer.MerchantMiddlewareCustomerSvcPromiseClient.prototype.authorizeRegistredCustomer =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/MerchantMiddlewareCustomer.MerchantMiddlewareCustomerSvc/AuthorizeRegistredCustomer',
      request,
      metadata || {},
      methodDescriptor_MerchantMiddlewareCustomerSvc_AuthorizeRegistredCustomer);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.MerchantMiddlewareCustomer.MerchantCustomerIdRequestMessage,
 *   !proto.MerchantMiddlewareCustomer.SuccessMessageMerchantMiddleware>}
 */
const methodDescriptor_MerchantMiddlewareCustomerSvc_DisapproveRegistredCustomer = new grpc.web.MethodDescriptor(
  '/MerchantMiddlewareCustomer.MerchantMiddlewareCustomerSvc/DisapproveRegistredCustomer',
  grpc.web.MethodType.UNARY,
  proto.MerchantMiddlewareCustomer.MerchantCustomerIdRequestMessage,
  proto.MerchantMiddlewareCustomer.SuccessMessageMerchantMiddleware,
  /**
   * @param {!proto.MerchantMiddlewareCustomer.MerchantCustomerIdRequestMessage} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.MerchantMiddlewareCustomer.SuccessMessageMerchantMiddleware.deserializeBinary
);


/**
 * @param {!proto.MerchantMiddlewareCustomer.MerchantCustomerIdRequestMessage} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.MerchantMiddlewareCustomer.SuccessMessageMerchantMiddleware)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.MerchantMiddlewareCustomer.SuccessMessageMerchantMiddleware>|undefined}
 *     The XHR Node Readable Stream
 */
proto.MerchantMiddlewareCustomer.MerchantMiddlewareCustomerSvcClient.prototype.disapproveRegistredCustomer =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/MerchantMiddlewareCustomer.MerchantMiddlewareCustomerSvc/DisapproveRegistredCustomer',
      request,
      metadata || {},
      methodDescriptor_MerchantMiddlewareCustomerSvc_DisapproveRegistredCustomer,
      callback);
};


/**
 * @param {!proto.MerchantMiddlewareCustomer.MerchantCustomerIdRequestMessage} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.MerchantMiddlewareCustomer.SuccessMessageMerchantMiddleware>}
 *     Promise that resolves to the response
 */
proto.MerchantMiddlewareCustomer.MerchantMiddlewareCustomerSvcPromiseClient.prototype.disapproveRegistredCustomer =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/MerchantMiddlewareCustomer.MerchantMiddlewareCustomerSvc/DisapproveRegistredCustomer',
      request,
      metadata || {},
      methodDescriptor_MerchantMiddlewareCustomerSvc_DisapproveRegistredCustomer);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.MerchantMiddlewareCustomer.MerchantCustomerSuspendCloseRequestMessage,
 *   !proto.MerchantMiddlewareCustomer.SuccessMessageMerchantMiddleware>}
 */
const methodDescriptor_MerchantMiddlewareCustomerSvc_SuspendorcloseRegistredCustomer = new grpc.web.MethodDescriptor(
  '/MerchantMiddlewareCustomer.MerchantMiddlewareCustomerSvc/SuspendorcloseRegistredCustomer',
  grpc.web.MethodType.UNARY,
  proto.MerchantMiddlewareCustomer.MerchantCustomerSuspendCloseRequestMessage,
  proto.MerchantMiddlewareCustomer.SuccessMessageMerchantMiddleware,
  /**
   * @param {!proto.MerchantMiddlewareCustomer.MerchantCustomerSuspendCloseRequestMessage} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.MerchantMiddlewareCustomer.SuccessMessageMerchantMiddleware.deserializeBinary
);


/**
 * @param {!proto.MerchantMiddlewareCustomer.MerchantCustomerSuspendCloseRequestMessage} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.MerchantMiddlewareCustomer.SuccessMessageMerchantMiddleware)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.MerchantMiddlewareCustomer.SuccessMessageMerchantMiddleware>|undefined}
 *     The XHR Node Readable Stream
 */
proto.MerchantMiddlewareCustomer.MerchantMiddlewareCustomerSvcClient.prototype.suspendorcloseRegistredCustomer =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/MerchantMiddlewareCustomer.MerchantMiddlewareCustomerSvc/SuspendorcloseRegistredCustomer',
      request,
      metadata || {},
      methodDescriptor_MerchantMiddlewareCustomerSvc_SuspendorcloseRegistredCustomer,
      callback);
};


/**
 * @param {!proto.MerchantMiddlewareCustomer.MerchantCustomerSuspendCloseRequestMessage} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.MerchantMiddlewareCustomer.SuccessMessageMerchantMiddleware>}
 *     Promise that resolves to the response
 */
proto.MerchantMiddlewareCustomer.MerchantMiddlewareCustomerSvcPromiseClient.prototype.suspendorcloseRegistredCustomer =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/MerchantMiddlewareCustomer.MerchantMiddlewareCustomerSvc/SuspendorcloseRegistredCustomer',
      request,
      metadata || {},
      methodDescriptor_MerchantMiddlewareCustomerSvc_SuspendorcloseRegistredCustomer);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.MerchantMiddlewareCustomer.AcctToAcctTransRequestMessage,
 *   !proto.MerchantMiddlewareCustomer.AcctToAcctTransListMessage>}
 */
const methodDescriptor_MerchantMiddlewareCustomerSvc_GetAccountToAccountPeriodTrans = new grpc.web.MethodDescriptor(
  '/MerchantMiddlewareCustomer.MerchantMiddlewareCustomerSvc/GetAccountToAccountPeriodTrans',
  grpc.web.MethodType.UNARY,
  proto.MerchantMiddlewareCustomer.AcctToAcctTransRequestMessage,
  proto.MerchantMiddlewareCustomer.AcctToAcctTransListMessage,
  /**
   * @param {!proto.MerchantMiddlewareCustomer.AcctToAcctTransRequestMessage} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.MerchantMiddlewareCustomer.AcctToAcctTransListMessage.deserializeBinary
);


/**
 * @param {!proto.MerchantMiddlewareCustomer.AcctToAcctTransRequestMessage} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.MerchantMiddlewareCustomer.AcctToAcctTransListMessage)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.MerchantMiddlewareCustomer.AcctToAcctTransListMessage>|undefined}
 *     The XHR Node Readable Stream
 */
proto.MerchantMiddlewareCustomer.MerchantMiddlewareCustomerSvcClient.prototype.getAccountToAccountPeriodTrans =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/MerchantMiddlewareCustomer.MerchantMiddlewareCustomerSvc/GetAccountToAccountPeriodTrans',
      request,
      metadata || {},
      methodDescriptor_MerchantMiddlewareCustomerSvc_GetAccountToAccountPeriodTrans,
      callback);
};


/**
 * @param {!proto.MerchantMiddlewareCustomer.AcctToAcctTransRequestMessage} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.MerchantMiddlewareCustomer.AcctToAcctTransListMessage>}
 *     Promise that resolves to the response
 */
proto.MerchantMiddlewareCustomer.MerchantMiddlewareCustomerSvcPromiseClient.prototype.getAccountToAccountPeriodTrans =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/MerchantMiddlewareCustomer.MerchantMiddlewareCustomerSvc/GetAccountToAccountPeriodTrans',
      request,
      metadata || {},
      methodDescriptor_MerchantMiddlewareCustomerSvc_GetAccountToAccountPeriodTrans);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.MerchantMiddlewareCustomer.UsersByCIDRequestMessage,
 *   !proto.MerchantMiddlewareCustomer.MerchantCustomerPINChangeListMessage>}
 */
const methodDescriptor_MerchantMiddlewareCustomerSvc_GetMerchantCustomerPINChangeRequest = new grpc.web.MethodDescriptor(
  '/MerchantMiddlewareCustomer.MerchantMiddlewareCustomerSvc/GetMerchantCustomerPINChangeRequest',
  grpc.web.MethodType.UNARY,
  proto.MerchantMiddlewareCustomer.UsersByCIDRequestMessage,
  proto.MerchantMiddlewareCustomer.MerchantCustomerPINChangeListMessage,
  /**
   * @param {!proto.MerchantMiddlewareCustomer.UsersByCIDRequestMessage} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.MerchantMiddlewareCustomer.MerchantCustomerPINChangeListMessage.deserializeBinary
);


/**
 * @param {!proto.MerchantMiddlewareCustomer.UsersByCIDRequestMessage} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.MerchantMiddlewareCustomer.MerchantCustomerPINChangeListMessage)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.MerchantMiddlewareCustomer.MerchantCustomerPINChangeListMessage>|undefined}
 *     The XHR Node Readable Stream
 */
proto.MerchantMiddlewareCustomer.MerchantMiddlewareCustomerSvcClient.prototype.getMerchantCustomerPINChangeRequest =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/MerchantMiddlewareCustomer.MerchantMiddlewareCustomerSvc/GetMerchantCustomerPINChangeRequest',
      request,
      metadata || {},
      methodDescriptor_MerchantMiddlewareCustomerSvc_GetMerchantCustomerPINChangeRequest,
      callback);
};


/**
 * @param {!proto.MerchantMiddlewareCustomer.UsersByCIDRequestMessage} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.MerchantMiddlewareCustomer.MerchantCustomerPINChangeListMessage>}
 *     Promise that resolves to the response
 */
proto.MerchantMiddlewareCustomer.MerchantMiddlewareCustomerSvcPromiseClient.prototype.getMerchantCustomerPINChangeRequest =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/MerchantMiddlewareCustomer.MerchantMiddlewareCustomerSvc/GetMerchantCustomerPINChangeRequest',
      request,
      metadata || {},
      methodDescriptor_MerchantMiddlewareCustomerSvc_GetMerchantCustomerPINChangeRequest);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.MerchantMiddlewareCustomer.MerchantCustomerPINChangeApproveMessage,
 *   !proto.MerchantMiddlewareCustomer.SuccessMessageMerchantMiddleware>}
 */
const methodDescriptor_MerchantMiddlewareCustomerSvc_MerchantCustomerPINChangeApproval = new grpc.web.MethodDescriptor(
  '/MerchantMiddlewareCustomer.MerchantMiddlewareCustomerSvc/MerchantCustomerPINChangeApproval',
  grpc.web.MethodType.UNARY,
  proto.MerchantMiddlewareCustomer.MerchantCustomerPINChangeApproveMessage,
  proto.MerchantMiddlewareCustomer.SuccessMessageMerchantMiddleware,
  /**
   * @param {!proto.MerchantMiddlewareCustomer.MerchantCustomerPINChangeApproveMessage} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.MerchantMiddlewareCustomer.SuccessMessageMerchantMiddleware.deserializeBinary
);


/**
 * @param {!proto.MerchantMiddlewareCustomer.MerchantCustomerPINChangeApproveMessage} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.MerchantMiddlewareCustomer.SuccessMessageMerchantMiddleware)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.MerchantMiddlewareCustomer.SuccessMessageMerchantMiddleware>|undefined}
 *     The XHR Node Readable Stream
 */
proto.MerchantMiddlewareCustomer.MerchantMiddlewareCustomerSvcClient.prototype.merchantCustomerPINChangeApproval =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/MerchantMiddlewareCustomer.MerchantMiddlewareCustomerSvc/MerchantCustomerPINChangeApproval',
      request,
      metadata || {},
      methodDescriptor_MerchantMiddlewareCustomerSvc_MerchantCustomerPINChangeApproval,
      callback);
};


/**
 * @param {!proto.MerchantMiddlewareCustomer.MerchantCustomerPINChangeApproveMessage} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.MerchantMiddlewareCustomer.SuccessMessageMerchantMiddleware>}
 *     Promise that resolves to the response
 */
proto.MerchantMiddlewareCustomer.MerchantMiddlewareCustomerSvcPromiseClient.prototype.merchantCustomerPINChangeApproval =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/MerchantMiddlewareCustomer.MerchantMiddlewareCustomerSvc/MerchantCustomerPINChangeApproval',
      request,
      metadata || {},
      methodDescriptor_MerchantMiddlewareCustomerSvc_MerchantCustomerPINChangeApproval);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.MerchantMiddlewareCustomer.MerchantCustomerTerminateServiceMessage,
 *   !proto.MerchantMiddlewareCustomer.SuccessMessageMerchantMiddleware>}
 */
const methodDescriptor_MerchantMiddlewareCustomerSvc_MerchantCustomerTerminateServiceRequest = new grpc.web.MethodDescriptor(
  '/MerchantMiddlewareCustomer.MerchantMiddlewareCustomerSvc/MerchantCustomerTerminateServiceRequest',
  grpc.web.MethodType.UNARY,
  proto.MerchantMiddlewareCustomer.MerchantCustomerTerminateServiceMessage,
  proto.MerchantMiddlewareCustomer.SuccessMessageMerchantMiddleware,
  /**
   * @param {!proto.MerchantMiddlewareCustomer.MerchantCustomerTerminateServiceMessage} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.MerchantMiddlewareCustomer.SuccessMessageMerchantMiddleware.deserializeBinary
);


/**
 * @param {!proto.MerchantMiddlewareCustomer.MerchantCustomerTerminateServiceMessage} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.MerchantMiddlewareCustomer.SuccessMessageMerchantMiddleware)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.MerchantMiddlewareCustomer.SuccessMessageMerchantMiddleware>|undefined}
 *     The XHR Node Readable Stream
 */
proto.MerchantMiddlewareCustomer.MerchantMiddlewareCustomerSvcClient.prototype.merchantCustomerTerminateServiceRequest =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/MerchantMiddlewareCustomer.MerchantMiddlewareCustomerSvc/MerchantCustomerTerminateServiceRequest',
      request,
      metadata || {},
      methodDescriptor_MerchantMiddlewareCustomerSvc_MerchantCustomerTerminateServiceRequest,
      callback);
};


/**
 * @param {!proto.MerchantMiddlewareCustomer.MerchantCustomerTerminateServiceMessage} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.MerchantMiddlewareCustomer.SuccessMessageMerchantMiddleware>}
 *     Promise that resolves to the response
 */
proto.MerchantMiddlewareCustomer.MerchantMiddlewareCustomerSvcPromiseClient.prototype.merchantCustomerTerminateServiceRequest =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/MerchantMiddlewareCustomer.MerchantMiddlewareCustomerSvc/MerchantCustomerTerminateServiceRequest',
      request,
      metadata || {},
      methodDescriptor_MerchantMiddlewareCustomerSvc_MerchantCustomerTerminateServiceRequest);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.MerchantMiddlewareCustomer.MerchantCustomerPINChangeApproveMessage,
 *   !proto.MerchantMiddlewareCustomer.SuccessMessageMerchantMiddleware>}
 */
const methodDescriptor_MerchantMiddlewareCustomerSvc_MerchantCustomerTerminateServiceRequestApproval = new grpc.web.MethodDescriptor(
  '/MerchantMiddlewareCustomer.MerchantMiddlewareCustomerSvc/MerchantCustomerTerminateServiceRequestApproval',
  grpc.web.MethodType.UNARY,
  proto.MerchantMiddlewareCustomer.MerchantCustomerPINChangeApproveMessage,
  proto.MerchantMiddlewareCustomer.SuccessMessageMerchantMiddleware,
  /**
   * @param {!proto.MerchantMiddlewareCustomer.MerchantCustomerPINChangeApproveMessage} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.MerchantMiddlewareCustomer.SuccessMessageMerchantMiddleware.deserializeBinary
);


/**
 * @param {!proto.MerchantMiddlewareCustomer.MerchantCustomerPINChangeApproveMessage} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.MerchantMiddlewareCustomer.SuccessMessageMerchantMiddleware)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.MerchantMiddlewareCustomer.SuccessMessageMerchantMiddleware>|undefined}
 *     The XHR Node Readable Stream
 */
proto.MerchantMiddlewareCustomer.MerchantMiddlewareCustomerSvcClient.prototype.merchantCustomerTerminateServiceRequestApproval =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/MerchantMiddlewareCustomer.MerchantMiddlewareCustomerSvc/MerchantCustomerTerminateServiceRequestApproval',
      request,
      metadata || {},
      methodDescriptor_MerchantMiddlewareCustomerSvc_MerchantCustomerTerminateServiceRequestApproval,
      callback);
};


/**
 * @param {!proto.MerchantMiddlewareCustomer.MerchantCustomerPINChangeApproveMessage} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.MerchantMiddlewareCustomer.SuccessMessageMerchantMiddleware>}
 *     Promise that resolves to the response
 */
proto.MerchantMiddlewareCustomer.MerchantMiddlewareCustomerSvcPromiseClient.prototype.merchantCustomerTerminateServiceRequestApproval =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/MerchantMiddlewareCustomer.MerchantMiddlewareCustomerSvc/MerchantCustomerTerminateServiceRequestApproval',
      request,
      metadata || {},
      methodDescriptor_MerchantMiddlewareCustomerSvc_MerchantCustomerTerminateServiceRequestApproval);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.MerchantMiddlewareCustomer.UsersByCIDRequestMessage,
 *   !proto.MerchantMiddlewareCustomer.MerchantCustomerTerminateServiceListResponseMessage>}
 */
const methodDescriptor_MerchantMiddlewareCustomerSvc_GetMerchantCustomerTerminateServiceRequest = new grpc.web.MethodDescriptor(
  '/MerchantMiddlewareCustomer.MerchantMiddlewareCustomerSvc/GetMerchantCustomerTerminateServiceRequest',
  grpc.web.MethodType.UNARY,
  proto.MerchantMiddlewareCustomer.UsersByCIDRequestMessage,
  proto.MerchantMiddlewareCustomer.MerchantCustomerTerminateServiceListResponseMessage,
  /**
   * @param {!proto.MerchantMiddlewareCustomer.UsersByCIDRequestMessage} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.MerchantMiddlewareCustomer.MerchantCustomerTerminateServiceListResponseMessage.deserializeBinary
);


/**
 * @param {!proto.MerchantMiddlewareCustomer.UsersByCIDRequestMessage} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.MerchantMiddlewareCustomer.MerchantCustomerTerminateServiceListResponseMessage)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.MerchantMiddlewareCustomer.MerchantCustomerTerminateServiceListResponseMessage>|undefined}
 *     The XHR Node Readable Stream
 */
proto.MerchantMiddlewareCustomer.MerchantMiddlewareCustomerSvcClient.prototype.getMerchantCustomerTerminateServiceRequest =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/MerchantMiddlewareCustomer.MerchantMiddlewareCustomerSvc/GetMerchantCustomerTerminateServiceRequest',
      request,
      metadata || {},
      methodDescriptor_MerchantMiddlewareCustomerSvc_GetMerchantCustomerTerminateServiceRequest,
      callback);
};


/**
 * @param {!proto.MerchantMiddlewareCustomer.UsersByCIDRequestMessage} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.MerchantMiddlewareCustomer.MerchantCustomerTerminateServiceListResponseMessage>}
 *     Promise that resolves to the response
 */
proto.MerchantMiddlewareCustomer.MerchantMiddlewareCustomerSvcPromiseClient.prototype.getMerchantCustomerTerminateServiceRequest =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/MerchantMiddlewareCustomer.MerchantMiddlewareCustomerSvc/GetMerchantCustomerTerminateServiceRequest',
      request,
      metadata || {},
      methodDescriptor_MerchantMiddlewareCustomerSvc_GetMerchantCustomerTerminateServiceRequest);
};


module.exports = proto.MerchantMiddlewareCustomer;

